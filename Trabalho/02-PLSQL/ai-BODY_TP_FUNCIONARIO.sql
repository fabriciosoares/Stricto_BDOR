CREATE OR REPLACE TYPE BODY TP_FUNCIONARIO AS
	MEMBER FUNCTION GETSUMALLGRATIFICACOES RETURN NUMBER AS CONT INTEGER;
	TOTAL NUMBER(8,2);
	BEGIN
		TOTAL:=0;
		IF(SELF.GRATIFICACOES IS NOT NULL) THEN
			FOR CONT IN 1..SELF.GRATIFICACOES.COUNT LOOP
				TOTAL := TOTAL + SELF.GRATIFICACOES(CONT).VALOR;
			END LOOP;
		END IF;
		RETURN TOTAL;
	END GETSUMALLGRATIFICACOES;
	MEMBER FUNCTION GETTOTGRATIFICACOESBYANO(ANO IN INTEGER) RETURN NUMBER AS TOTAL NUMBER(8,2);
	BEGIN
		TOTAL:=0;
		IF(SELF.GRATIFICACOES IS NOT NULL AND UTL_COLL.IS_LOCATOR(SELF.GRATIFICACOES)) THEN
			SELECT SUM(G.VALOR) INTO TOTAL
				FROM TABLE(CAST(SELF.GRATIFICACOES AS NESTED_GRATIFICACAO)) G
				WHERE TO_CHAR(G.PERIODO,'YYYY') = TO_CHAR(ANO);
		END IF;
		RETURN TOTAL;
	END GETTOTGRATIFICACOESBYANO;
	MEMBER FUNCTION GETTOTGRATIFICACOESBYPERIODO(DATAINI IN DATE, DATAFIM IN DATE) RETURN NUMBER AS TOTAL NUMBER(8,2);
	BEGIN
		TOTAL := 0;
		IF (SELF.GRATIFICACOES IS NOT NULL AND UTL_COLL.IS_LOCATOR(SELF.GRATIFICACOES)) THEN
			SELECT SUM(G.VALOR) INTO TOTAL
				FROM TABLE(CAST(SELF.GRATIFICACOES AS NESTED_GRATIFICACAO)) G
				WHERE R(G.PERIODO,'DD/MM/YYYY') BETWEEN TO_CHAR(DATAINI,'DD/MM/YYYY') AND TO_CHAR(DATAFIM,'DD/MM/YYYY');
		END IF;
	END GETTOTGRATIFICACOESBYPERIODO;
	MEMBER FUNCTION GETTOTGRATIFICACOESBYMESANO(MES IN INTEGER,ANO IN INTEGER) RETURN NUMBER AS TOTAL NUMBER(8,2);
	MESANO VARCHAR2(8);
	BEGIN
		TOTAL := 0;
		IF(SELF.GRATIFICACOES IS NOT NULL AND UTL_COLL.IS_LOCATOR(SELF.GRATIFICACOES)) THEN
			MESANO := TO_CHAR(MES) || '/' || TO_CHAR(ANO);
			SELECT SUM(G.VALOR) INTO TOTAL 
				FROM TABLE(CAST(SELF.GRATIFICACOES AS NESTED_GRATIFICACAO)) G
				WHERE TO_CHAR(G.PERIODO,'MM/YYYY') = MESANO;
		END IF;
	RETURN TOTAL;
	END GETTOTGRATIFICACOESBYMESANO;
	MEMBER FUNCTION GETCARGO RETURN VARCHAR2 AS
	RETORNO VARCHAR2(455);
	BEGIN
		SELECT DEREF(F.REF_CARGO).GETINFO() INTO RETORNO
			FROM TB_FUNCIONARIO F
			WHERE SELF.MATRICULA=F.MATRICULA;
		RETURN RETORNO;
	END GETCARGO;
	MEMBER FUNCTION GETSTATUS RETURN VARCHAR2 AS
	RETORNO VARCHAR2(25);
	BEGIN
		IF(SELF.STATUS='A') THEN
			RETORNO:='ATIVO';
		ELSE
			RETORNO:='INATIVO';
		END IF;
		RETURN RETORNO;
	END GETSTATUS;
	MEMBER FUNCTION GETINFO RETURN VARCHAR2 AS RETORNO VARCHAR2(1255);
	INFOFUNC VARCHAR(550);
	BEGIN
		SELECT DEREF(F.REF_PESSOAFISICA).GETINFO() INTO INFOFUNC 
			FROM TB_FUNCIONARIO F 
			WHERE F.MATRICULA=SELF.MATRICULA;
		RETORNO := ' DATA DE ADMISSÃO: ' || TO_CHAR(SELF.DATAADMISSAO,'DD/MM/YYYY');
		RETORNO := RETORNO || ' MATRÍCULA: ' || TO_CHAR(SELF.MATRICULA);
		RETORNO := RETORNO || ' SALÁRIO: ' || TO_CHAR(SELF.SALARIO);
		RETORNO := RETORNO || ' STATUS: ' || TO_CHAR(SELF.GETSTATUS());
		RETORNO := RETORNO || ' DADOS DO FUNCIONÁRIO: ' || INFOFUNC;
		RETURN RETORNO;
	END GETINFO;
	MEMBER FUNCTION GETINFORESUMIDA RETURN VARCHAR2 AS RETORNO VARCHAR2(1255);
	NOMEFUNC VARCHAR2(50);
	BEGIN
		SELECT DEREF(F.REF_PESSOAFISICA).NOME INTO NOMEFUNC 
			FROM TB_FUNCIONARIO F 
			WHERE F.MATRICULA=SELF.MATRICULA;
		RETORNO:=' MATRÍCULA: '||TO_CHAR(SELF.MATRICULA)||' NOME DO FUNCIONÁRIO: '||NOMEFUNC;
		RETURN RETORNO;
	END GETINFORESUMIDA;
	MEMBER FUNCTION GETINFOSUPERVISOR RETURN VARCHAR2 AS RETORNO VARCHAR2(1255);
	INFOSUPERVISOR VARCHAR2(550);
	BEGIN
		SELECT DEREF(F.REF_SUPERVISOR).GETINFO() INTO INFOSUPERVISOR 
			FROM TB_FUNCIONARIO F 
			WHERE F.MATRICULA=SELF.MATRICULA;
		RETORNO := ' DADOS DO SUPERVISOR: ' || INFOSUPERVISOR;
		RETURN RETORNO;
	END GETINFOSUPERVISOR;
	MEMBER FUNCTION POSSUISUPERVISOR RETURN BOOLEAN AS RETORNO BOOLEAN;
	REFFUNC REF TP_FUNCIONARIO;
	BEGIN
		SELECT REF(F) INTO REFFUNC
			FROM TB_FUNCIONARIO F
			WHERE F.MATRICULA=SELF.MATRICULA AND (F.REF_SUPERVISOR IS NOT DANGLING);
		IF(SELF.REF_SUPERVISOR IS NOT NULL AND REFFUNC IS NOT NULL) THEN
			RETORNO := TRUE;
		ELSE
			RETORNO:=FALSE;
		END IF;
		RETURN RETORNO;
	END POSSUISUPERVISOR;
	MEMBER FUNCTION GETFUNCIOARIOSSUPERVISIONADOS RETURN VARCHAR2 AS RETORNO VARCHAR2(2855);
	CONT NUMBER;
	CURSOR C_FSUPERVISIONADOS IS 
		SELECT F.GETINFORESUMIDA() AS FUNC 
			FROM TB_FUNCIONARIO F
			WHERE (F.REF_SUPERVISOR IS NOT DANGLING AND
				F.REF_SUPERVISOR IS NOT NULL AND
				SELF.MATRICULA=DEREF(F.REF_SUPERVISOR).MATRICULA)
			ORDER BY (DEREF(F.REF_PESSOAFISICA).NOME);
	V_FSUPERVISIONADOS C_FSUPERVISIONADOS%ROWTYPE;
	BEGIN
		RETORNO:='';
		CONT:=0;
		FOR V_FSUPERVISIONADOS IN C_FSUPERVISIONADOS LOOP
			CONT:=CONT+1;
			RETORNO := RETORNO || ' FUNCIONÁRIO SUPERVISIONADO ' || TO_CHAR(CONT);
			RETORNO := RETORNO || 'ª - ' || V_FSUPERVISIONADOS.FUNC;
		END LOOP;
		RETURN RETORNO;
	END GETFUNCIOARIOSSUPERVISIONADOS;
	MAP MEMBER FUNCTION GETMATRICULA RETURN NUMBER AS
	BEGIN
		RETURN SELF.MATRICULA;
	END GETMATRICULA;
	STATIC FUNCTION COMPARE(OBJ1 TP_FUNCIONARIO, OBJ2 TP_FUNCIONARIO) RETURN BOOLEAN AS RETORNO BOOLEAN;
	BEGIN
		RETORNO := FALSE;
		IF(TO_CHAR(OBJ1.MATRICULA)=TO_CHAR(OBJ2.MATRICULA)) THEN
			RETORNO := TRUE;
		ELSE
			RETORNO := FALSE;
		END IF;
		RETURN RETORNO;
	END COMPARE;
END;